a <- rnorm(1000)
IQR(a)
a <- rnorm(1000)
IQR(a)
a <- rnorm(1000)
IQR(a)
a <- rnorm(1000)
IQR(a)
a <- rnorm(1000)
IQR(a)
a <- rnorm(1000)
IQR(a)
a <- rnorm(1000)
IQR(a)
a <- rnorm(1000)
IQR(a)
a <- rnorm(1000)
IQR(a)
a <- rnorm(1000)
IQR(a)
a <- rnorm(1000)
IQR(a)
a <- rnorm(1000)
IQR(a)
a <- rnorm(1000)
IQR(a)
2*log(2)
2-(2*log(2))^2
knitr::opts_chunk$set(echo = TRUE)
set.seed(2001)
n = 100
u = runif(n, 0, 1)
y = 2/(2-u)
x = 2*y + rnorm(n, 1, 0.5)
set.seed(2001)
n = 100
u = runif(n, 0, 1)
y = 2/(2-u)
x = 2*y + rnorm(n, 1, 0.5)
plot(x, y)
plot(x, y)
set.seed(2001)
n = 500
u = runif(n, 0, 1)
y = 2/(2-u)
x = 2*y + rnorm(n, 1, 0.5)
plot(x, y)
plot(x, y)
set.seed(2001)
n = 500
u = runif(n, 0, 1)
y = 2/(2-u)
x = 2*y + rnorm(n, 1, 0.25)
plot(x, y)
set.seed(2001)
n = 500
u = runif(n, 0, 1)
y = 2/(2-u)
x = 2*y + rnorm(n, 1, sqrt(0.25)
plot(x, y)
set.seed(2001)
n = 500
u = runif(n, 0, 1)
y = 2/(2-u)
x = 2*y + rnorm(n, 1, sqrt(0.25))
plot(x, y)
plot(x, y)
lm(y ~ x)
summary(lm(y ~ x))
set.seed(2001)
n = 500
u = runif(n, 0, 1)
y = 2/(2-u)
x = 2*y + rnorm(n, 1, sqrt(0.25))
plot(x, y)
options(digits = 4)
model1 <- lm(y ~ x)
s.model1 <- summary(model1)
s.model1$coefficients
a = 2;
VarU = 0.5;
EY = 2*log(2)
VarY = 2 - (2*log(2))^2
b1 <- a^2*VarY/(a^2*VarY + VarU)
b0 = EY - b1*a*EY
set.seed(2001)
n = 54
u = runif(n, 0, 1)
y = 2/(2-u)
x = 2*y + rnorm(n, 0, sqrt(0.25))
plot(x, y)
options(digits = 4)
model1 <- lm(y ~ x)
s.model1 <- summary(model1)
hatbeta1 = cov(x, y)/var(x)
hatbeta0 = mean(y) - hatbeta1*mean(x)
a = 2;
VarU = 0.5;
EY = 2*log(2)
VarY = 2 - (2*log(2))^2
b1 <- a^2*VarY/(a^2*VarY + VarU)
b0 = EY - b1*a*EY
set.seed(2001)
n = 54
u = runif(n, 0, 1)
y = 2/(2-u)
x = 2*y + rnorm(n, 0, sqrt(0.25))
plot(x, y)
options(digits = 4)
model1 <- lm(y ~ x)
s.model1 <- summary(model1)
hatbeta1 = cov(x, y)/var(x)
hatbeta0 = mean(y) - hatbeta1*mean(x)
3/5-9/16
3/8
3/80
log(1)
a = -2;
VarU = 0.25;
EY = 1/log(2)
VarY = 3/(2*log(2)) - (EY)^2
b1 <- a*VarY/(a^2*VarY + VarU)
b0 = EY - b1*a*EY
set.seed(2001)
n = 125
u = runif(n, 0, 1)
y = u^(1/3)
x = a*y + rnorm(n, 0, sqrt(VarU))
plot(x, y)
options(digits = 4)
model1 <- lm(y ~ x)
s.model1 <- summary(model1)
hatbeta1 = cov(x, y)/var(x)
hatbeta0 = mean(y) - hatbeta1*mean(x)
Var(Y)
VarY
var(y)
e^{5*log(2)}
exp(5*log(2))
a = -2;
VarU = 0.25;
EY = 1/log(2)
VarY = 3/(2*log(2)) - (EY)^2
b1 <- a*VarY/(a^2*VarY + VarU)
b0 = EY - b1*a*EY
set.seed(2001)
n = 46
u = runif(n, 0, 1)
y = 2^u
x = a*y + rnorm(n, 0, sqrt(VarU))
plot(x, y)
options(digits = 4)
model1 <- lm(y ~ x)
s.model1 <- summary(model1)
hatbeta1 = cov(x, y)/var(x)
hatbeta0 = mean(y) - hatbeta1*mean(x)
mean(y)
1/log(2)
var(y)
VarY
n = 2000
u = runif(n, 0, 1)
y = 2^u
mean(y)
EY
VarY
var(y)
a = -2;
VarU = 0.25;
EY = 1/log(2)
VarY = 3/(2*log(2)) - (EY)^2
b1 <- a*VarY/(a^2*VarY + VarU)
b0 = EY - b1*a*EY
set.seed(2001)
n = 46
u = runif(n, 0, 1)
y = 2^u
x = a*y + rnorm(n, 0, sqrt(VarU))
plot(x, y)
options(digits = 4)
model1 <- lm(y ~ x)
s.model1 <- summary(model1)
hatbeta1 = cov(x, y)/var(x)
hatbeta0 = mean(y) - hatbeta1*mean(x)
hatbeta1
s.model1
a = 2;
VarU = 0.25;
EY = 2*log(2)
VarY = 2 - (2*log(2))^2
b1 <- a*VarY/(a^2*VarY + VarU)
b0 = EY - b1*a*EY
set.seed(2001)
n = 54
u = runif(n, 0, 1)
y = 2/(2-u)
x = 2*y + rnorm(n, 0, sqrt(0.25))
plot(x, y)
options(digits = 4)
model1 <- lm(y ~ x)
s.model1 <- summary(model1)
hatbeta1 = cov(x, y)/var(x)
hatbeta0 = mean(y) - hatbeta1*mean(x)
plot(model1, which = 2)
shapiro.test(resid(m1))
shapiro.test(resid(model1))
a = -2;
VarU = 0.25;
EY = 3/4
VarY = 3/80
b1 <- a*VarY/(a^2*VarY + VarU)
b0 = EY - b1*a*EY
set.seed(2001)
n = 125
u = runif(n, 0, 1)
y = u^(1/3)
x = a*y + rnorm(n, 0, sqrt(0.25))
plot(x, y)
options(digits = 4)
model1 <- lm(y ~ x)
s.model1 <- summary(model1)
hatbeta1 = cov(x, y)/var(x)
hatbeta0 = mean(y) - hatbeta1*mean(x)
shapiro.test(resid.model1)
a = -2;
VarU = 0.25;
EY = 3/4
VarY = 3/80
b1 <- a*VarY/(a^2*VarY + VarU)
b0 = EY - b1*a*EY
set.seed(2001)
n = 125
u = runif(n, 0, 1)
y = u^(1/3)
x = a*y + rnorm(n, 0, sqrt(0.25))
plot(x, y)
options(digits = 4)
model1 <- lm(y ~ x)
s.model1 <- summary(model1)
hatbeta1 = cov(x, y)/var(x)
hatbeta0 = mean(y) - hatbeta1*mean(x)
shapiro.test(resid(model1))
a = -2;
VarU = 0.25;
EY = 1/log(2)
VarY = 3/(2*log(2)) - (EY)^2
b1 <- a*VarY/(a^2*VarY + VarU)
b0 = EY - b1*a*EY
set.seed(2001)
n = 46
u = runif(n, 0, 1)
y = 2^u
x = a*y + rnorm(n, 0, sqrt(VarU))
plot(x, y)
options(digits = 4)
model1 <- lm(y ~ x)
s.model1 <- summary(model1)
hatbeta1 = cov(x, y)/var(x)
hatbeta0 = mean(y) - hatbeta1*mean(x)
shapiro.test(resid(model1))
a = -2;
VarU = 0.25;
EY = 1/log(2)
VarY = 3/(2*log(2)) - (EY)^2
b1 <- a*VarY/(a^2*VarY + VarU)
b0 = EY - b1*a*EY
set.seed(2001)
n = 46
u = runif(n, 0, 1)
y = 2^u
x = a*y + rnorm(n, 0, sqrt(VarU))
plot(x, y)
options(digits = 4)
model1 <- lm(y ~ x)
s.model1 <- summary(model1)
hatbeta1 = cov(x, y)/var(x)
hatbeta0 = mean(y) - hatbeta1*mean(x)
shapiro.test(resid(model1))
plot(model1, which = 2)
a = -2;
VarU = 0.25;
EY = 1/log(2)
VarY = 3/(2*log(2)) - (EY)^2
b1 <- a*VarY/(a^2*VarY + VarU)
b0 = EY - b1*a*EY
set.seed(2001)
n = 46
u = runif(n, 0, 1)
y = 2^u
x = a*y + rnorm(n, 0, sqrt(VarU))
plot(x, y)
options(digits = 4)
model1 <- lm(y ~ x)
s.model1 <- summary(model1)
hatbeta1 = cov(x, y)/var(x)
hatbeta0 = mean(y) - hatbeta1*mean(x)
shapiro.test(resid(model1))
plot(model1, which = 2)
plot(model1, which = 2)
a = -2;
VarU = 0.25;
EY = 3/4
VarY = 3/80
b1 <- a*VarY/(a^2*VarY + VarU)
b0 = EY - b1*a*EY
set.seed(2001)
n = 125
u = runif(n, 0, 1)
y = u^(1/3)
x = a*y + rnorm(n, 0, sqrt(0.25))
plot(x, y)
options(digits = 4)
model1 <- lm(y ~ x)
s.model1 <- summary(model1)
hatbeta1 = cov(x, y)/var(x)
hatbeta0 = mean(y) - hatbeta1*mean(x)
plot(model1, which = 2)
shapiro.test(resid(model1))
plot(model1, which = 2)
a = -2;
VarU = 0.25;
EY = 3/4
VarY = 3/80
b1 <- a*VarY/(a^2*VarY + VarU)
b0 = EY - b1*a*EY
set.seed(2001)
n = 35
u = runif(n, 0, 1)
y = u^(1/3)
x = a*y + rnorm(n, 0, sqrt(0.25))
plot(x, y)
options(digits = 4)
model1 <- lm(y ~ x)
s.model1 <- summary(model1)
hatbeta1 = cov(x, y)/var(x)
hatbeta0 = mean(y) - hatbeta1*mean(x)
plot(model1, which = 2)
shapiro.test(resid(model1))
a = -2;
VarU = 0.25;
EY = 3/4
VarY = 3/80
b1 <- a*VarY/(a^2*VarY + VarU)
b0 = EY - b1*a*EY
set.seed(2001)
n = 125
u = runif(n, 0, 1)
y = u^(1/3)
x = a*y + rnorm(n, 0, sqrt(0.25))
plot(x, y)
options(digits = 4)
model1 <- lm(y ~ x)
s.model1 <- summary(model1)
hatbeta1 = cov(x, y)/var(x)
hatbeta0 = mean(y) - hatbeta1*mean(x)
plot(model1, which = 2)
shapiro.test(resid(model1))
EX = 2*log(2)
VarX = 2 - (2*log(2))^2
# part c
rho = 0.3
a = 2;
EU = 0;
VarU = 0.25;
VarZ = a^2 *VarX + VarU
CovXZ = a*VarX
EZ = a*EX
b1 = CovXZ/VarZ
b0 =  EZ - b1*EX
# part (iv) and (v)
set.seed(2001)
n = 54
u = runif(n, 0, 1)
x = 2/(2-u)
y = 2*x + rnorm(n, 0, sqrt(0.25))
plot(x, y)
options(digits = 4)
model1 <- lm(y ~ x)
s.model1 <- summary(model1)
hatbeta1 = cov(x, y)/var(x)
hatbeta0 = mean(y) - hatbeta1*mean(x)
1-pbinom(1, 5, 0.6)
1-pbinom(2, 5, 0.6)
dbinom(2, 5, 0.6)
dbinom(3, 5, 0.6)
a <- matrix(rnorm(1000*100, 1, 1.5), 1000, 100)
apply(a, 2, min)
apply(a, 1, min)
median(apply(a, 1, min))
setwd("~/Desktop")
?plsr
library(pls)
?plsr
?loadings
data(yarn)
plsmod <- plsr(density ~ NIR, 6, data = yarn)
scores(plsmod)
loadings(plsmod)[,1:4]
loadings(plsmod)
dim(loadings(plsmod))
dim(yarn)
View(yarn)
knitr::opts_chunk$set(echo = TRUE)
u <- runif(1)
x <- ifelse(u<0.5, 1, ifelse(u<0.8, 2, 3))
?ecdf
?rexp
load("/private/var/folders/50/trfnmvz94k14f_hk5rs0dwsw0000gn/T/ch.sudo.cyberduck/editor-18a0f8fd-200e-414c-a877-fb3b69162cb1/14a930823d5f91932ef86fcf857b8ba2/1683718224/results_sim_index07.Rdata")
Sim_onesigma[[1]]
Sim_onesigma[[1]]$result
Sim_onesigma[[2]]$result
Sim_onesigma[[3]]$result
Sim_onesigma[[4]]$result
folder = dir("./results_allcontinuous_qbinarytimevariant//",
pattern = ".Rdata", full.names = TRUE)
folder = gtools::mixedsort(folder) # sorting with embedded numbers
allFiles <- lapply(1:length(folder), function(j){
print(j)
load(folder[j])
map(Sim_onesigma, 1)
})
setwd("~/Dropbox/Ongoing Research/RPFC/Submission code/simulation-results/RMIR")
folder = dir("./results_allcontinuous_qbinarytimevariant//",
pattern = ".Rdata", full.names = TRUE)
folder = gtools::mixedsort(folder) # sorting with embedded numbers
allFiles <- lapply(1:length(folder), function(j){
print(j)
load(folder[j])
map(Sim_onesigma, 1)
})
library(tidyverse)
source("~/Dropbox/Ongoing Research/RPFC/Submission code/simulation-results/RMIR/analyze_results.R", echo=TRUE)
sim_binarytimevariant <- analyseResultsMeanAndSE(allFiles, 9)
sim_binarytimevariant_final <- matrix(NA, nrow(sim_binarytimevariant[[1]]), ncol(sim_inverse_isotropic[[1]]))
sim_binarytimevariant <- analyseResultsMeanAndSE(allFiles, 9)
### paste mean and se
sim_binarytimevariant_final <- matrix(NA, nrow(sim_binarytimevariant[[1]]), ncol(sim_binarytimevariant[[1]]))
tmp_matrix <- lapply(sim_binarytimevariant, as.matrix)
sim_binarytimevariant_final[] <- paste(format(round(tmp_matrix[[1]], 2), nsmall = 2), " (",
format(round(tmp_matrix[[2]], 2), nsmall = 2), ")",
sep = "")
colnames(sim_binarytimevariant_final) <-
c(paste(c("GPFC", "RPFC", "SPFC"), "MeanContinuous", sep = "_"),
paste(c("RPFC", "SPFC"), "Sigma", sep = "_"),
"RPFC_Gamma", "SPFC_Gamma")
sim_binarytimevariant_final
library(kableExtra)
cbind(Settings, sim_binarytimevariant_final) %>%
select(SigmaTildeType, n, everything()) %>%
mutate(SigmaTildeType = factor(SigmaTildeType,
labels = c("Diagonal", "AR(1)", "Exchangeable"))) %>%
mutate(across(1, replace_repeat)) %>%
kbl(format = "latex", row.names = F,
booktabs = T, linesep = c("", "", "\\addlinespace")
)
cbind(Settings, sim_binarytimeinvariant_final) %>%
select(SigmaTildeType, n, everything()) %>%
mutate(SigmaTildeType = factor(SigmaTildeType,
labels = c("Diagonal", "AR(1)", "Exchangeable"))) %>%
mutate(across(1, replace_repeat)) %>%
kbl(format = "latex", row.names = F,
booktabs = T, linesep = c("", "", "\\addlinespace")
)
cbind(Settings, sim_binarytimevariant_final) %>%
select(SigmaTildeType, n, everything()) %>%
mutate(SigmaTildeType = factor(SigmaTildeType,
labels = c("Diagonal", "AR(1)", "Exchangeable"))) %>%
mutate(across(1, replace_repeat)) %>%
kbl(format = "latex", row.names = F,
booktabs = T, linesep = c("", "", "\\addlinespace")
)
sim_binarytimeinvariant_final
sim_binarytimevariant_final
sim_binarytimevariant[[1]]
class(sim_binarytimevariant[[1]])
sim_binarytimevariant[[1]] %>%
data.frame() %>%
select(estMeanSpaceContinuous.RMIR, estMeanSpaceContinuous.GMIR, everything())
sim_binarytimevariant <- analyseResultsMeanAndSE(allFiles, 9)
sim_binarytimevariant[[1]] <- sim_binarytimevariant[[1]] %>%
data.frame() %>%
select(estMeanSpaceContinuous.RMIR, estMeanSpaceContinuous.GMIR, everything())
sim_binarytimevariant[[2]] <- sim_binarytimevariant[[2]] %>%
data.frame() %>%
select(estMeanSpaceContinuous.RMIR, estMeanSpaceContinuous.GMIR, everything())
### paste mean and se
sim_binarytimevariant_final <- matrix(NA, nrow(sim_binarytimevariant[[1]]), ncol(sim_binarytimevariant[[1]]))
tmp_matrix <- lapply(sim_binarytimevariant, as.matrix)
sim_binarytimevariant_final[] <- paste(format(round(tmp_matrix[[1]], 2), nsmall = 2), " (",
format(round(tmp_matrix[[2]], 2), nsmall = 2), ")",
sep = "")
colnames(sim_binarytimevariant_final) <-
c(paste(c("GPFC", "RPFC", "SPFC"), "MeanContinuous", sep = "_"),
paste(c("RPFC", "SPFC"), "Sigma", sep = "_"),
"RPFC_Gamma", "SPFC_Gamma")
cbind(Settings, sim_binarytimeinvariant_final) %>%
select(SigmaTildeType, n, everything()) %>%
mutate(SigmaTildeType = factor(SigmaTildeType,
labels = c("Diagonal", "AR(1)", "Exchangeable"))) %>%
mutate(across(1, replace_repeat)) %>%
kbl(format = "latex", row.names = F,
booktabs = T, linesep = c("", "", "\\addlinespace")
)
cbind(Settings, sim_binarytimevariant_final) %>%
select(SigmaTildeType, n, everything()) %>%
mutate(SigmaTildeType = factor(SigmaTildeType,
labels = c("Diagonal", "AR(1)", "Exchangeable"))) %>%
mutate(across(1, replace_repeat)) %>%
kbl(format = "latex", row.names = F,
booktabs = T, linesep = c("", "", "\\addlinespace")
)
source("~/Dropbox/Ongoing Research/RPFC/Submission code/simulation-results/RMIR/analyze_results.R", echo=TRUE)
